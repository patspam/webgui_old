package WebGUI::Workflow::Activity::Skeleton; # change "Skeleton" to your namespace.


=head1 LEGAL

 -------------------------------------------------------------------
  WebGUI is Copyright 2001-2009 Plain Black Corporation.
 -------------------------------------------------------------------
  Please read the legal notices (docs/legal.txt) and the license
  (docs/license.txt) that came with this distribution before using
  this software.
 -------------------------------------------------------------------
  http://www.plainblack.com                     info@plainblack.com
 -------------------------------------------------------------------

=cut

use strict;
use base 'WebGUI::Workflow::Activity';

=head1 NAME

Package WebGUI::Workflow::Activity::Skeleton

=head1 DESCRIPTION

Tell a little about what this activity does.

=head1 SYNOPSIS

See WebGUI::Workflow::Activity for details on how to use any activity.

=head1 METHODS

These methods are available from this class:

=cut


#-------------------------------------------------------------------

=head2 definition ( session, definition )

See WebGUI::Workflow::Activity::definition() for details.

=cut 

sub definition {
	my $class = shift;
	my $session = shift;
	my $definition = shift;
	my $i18n = WebGUI::International->new($session, "Activity_Skeleton");
	push(@{$definition}, {
		name=>$i18n->get("topicName"),
		properties=> {
			someField => {
				fieldType=>"integer",
				label=>"Some Field",
				defaultValue=>0,
				hoverHelp=>"Hover help for some field."
				},
			}
		});
	return $class->SUPER::definition($session,$definition);
}


#-------------------------------------------------------------------

=head2 execute ( [ object ] )

See WebGUI::Workflow::Activity::execute() for details.

=cut

sub execute {
	my $self = shift;
    my $object = shift;
    my $instance = shift;
    # do some work here, whatever this activity is supposed to do
	# Workflow is finished
    return $self->COMPLETE;
    # Or we ran out of time, run again ASAP
    return $self->WAITING(1);
	# Or we're waiting on some external process to complete, wait an hour
    #return $self->WAITING(60*60);
    # Or encountered an error and cannot finish
	#return $self->ERROR;
}



1;

#vim:ft=perl
